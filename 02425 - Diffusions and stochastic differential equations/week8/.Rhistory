library(SDEtools)
library(fields)
library(Matrix)
source("C:\\Users\\anton\\OneDrive - Københavns Universitet\\Uni\\Uni\\11. semester\\SDE\\week8\\fvade.R")
# Define dynamics
## Drift and intensity
f <- function(x) lambda * (xi - x)
g <- function(x) gamma*sqrt(abs(x))
## Diffusivity and its spatial derivative
D <- function(x) 0.5*gamma^2*x
Dp <- function(x) 0.5*gamma^2
## Advective flow field
u <- function(x) f(x) - Dp(x)
## Parameters
xi <- 2
gamma <- 1
lambda <- 1/2
## Spatial grid
xmax <- 10
xv <- seq(0,xmax,length=301)
dx <- diff(xv)
xc <- xv[-1] - 0.5*dx
## Discretize the generator
G <- fvade(u,D,xv,'r')
## Loading required package: Matrix
##
## Attaching package: 'Matrix'
## The following object is masked from 'package:spam':
##
## det
## Compute the stationary density
pi <- StationaryDistribution(G)
## user system elapsed
## 0.008 0.000 0.008
phi <- pi / dx
plot(xc,phi,type="l")
plot(function(x)dgamma(x,rate=2*lambda/gamma^2,shape=2*lambda*xi/gamma^2),
from=0,to=xmax,add=TRUE,col="red")
## Transients
## Initial condition for the SDE
x0 <- xi/2
## Initial condition for the FKE
phi0 <- numeric(length(xc))
phi0[sum(xc<x0)] <- 1
## Time grid
tv <- seq(0,10,0.03333333)
## Solve the FKE
Gs = as(G, "sparseMatrix")
PHI <- sapply(tv,function(t) as.numeric(phi0 %*% expm(Gs*t)))/dx
gg = rev(sort(PHI))
ind_max = which(PHI == max(PHI), arr.ind = TRUE)
PHI[ind_max] = gg[2]+10*(gg[2]-gg[3])
image.plot(tv,xc,t(PHI))
text(1,9,"text")
plot(xc,PHI[,1])
plot(xc,PHI[,2])
plot(xc,PHI[,3])
plot(xc,PHI[,4])
plot(xc,PHI[,5])
plot(xc,PHI[,6])
plot(xc,PHI[,7])
plot(xc,PHI[,8])
plot(xc,PHI[,9])
plot(xc,PHI[,10])
plot(xc,PHI[,20])
plot(xc,PHI[,30])
plot(xc,PHI[,40])
plot(xc,PHI[,50])
plot(xc,PHI[,60])
plot(xc,PHI[,70])
plot(xc,PHI[,80])
plot(xc,PHI[,90])
plot(xc,PHI[,length(tv)])
lines(xc,phi)
library(SDEtools)
library(fields)
library(Matrix)
library(Bessel)
source("C:\\Users\\anton\\OneDrive - Københavns Universitet\\Uni\\Uni\\11. semester\\SDE\\week9\\fvade.R")
#brow
rBM <- function(tvec){
return(cumsum(rnorm(length(tvec),mean=0,sd=sqrt(diff(c(0,tvec))))))
}
# Von Misses distribution
VonMises  = function(x,kappa){
I0 = BesselI(kappa, 0, expon.scaled = F)
pdf_probs = exp(kappa*cos(x))/(2*3.141593*I0)
return(pdf_probs)
}
# Define dynamics
sigma = 1
## Drift and intensity
f <- function(x) -sin(x)
g <- function(x) sigma
## Diffusivity and its spatial derivative
D <- function(x) 1/2*sigma^2
Dp <- function(x) 0
## Advective flow field
u <- function(x) f(x) - Dp(x)
## Parameters
xmin <- -3.141593
## Spatial grid
xmax <- 3.141593
xv <- seq(xmin,xmax,length=301)
dx <- diff(xv)
xc <- xv[-1] - 0.5*dx
G <- fvade(u,D,xv,'r')
Tend = 100
times = seq(0,Tend,length=100*Tend+1)
x0 = 0
path <- heun(f,g,times,x0)
par(mfrow=c(1,1))
plot(path$times,path$X)
pi <- StationaryDistribution(G)
phi <- pi / dx
hist(path$X, density = T, freq = F, main = "Von Mises SDE")
lines(xc,phi,type="l")
lines(xc,VonMises(xc, kappa = 2/sigma^2), col = 'red')
legend("topleft",
c("Simuation", "Numerical PDF", "Analytical PDF"), fill=c("gray","black", "red"))
# Ex 4
acf(cos(path$X), lag.max = 500)
# Ex 5
Gs = as(G, "sparseMatrix")
expLt = expm(Gs*1)
# mu cal in maple int(1/(2*Pi*2.279585)*exp(2/1*cos(x))*cos(x), x= -Pi..Pi)
mu = 0.6977747505
h = function(x) return(cos(x))
rho = function(x) return(VonMises(x,2))
rho_sum = rho(xc)/sum(rho(xc))
hvec = h(xc)
sum((rho_sum%*%(hvec-mu))[1]*(expLt%*%hvec))
sum((rho_sum*(hvec-mu))*(expLt%*%hvec))
library(SDEtools)
library(fields)
library(Matrix)
source("C:\\Users\\anton\\OneDrive - Københavns Universitet\\Uni\\Uni\\11. semester\\SDE\\week8\\fvade.R")
# Define dynamics
## Drift and intensity
f <- function(x) lambda * (xi - x)
g <- function(x) gamma*sqrt(abs(x))
## Diffusivity and its spatial derivative
D <- function(x) 0.5*gamma^2*x
Dp <- function(x) 0.5*gamma^2
## Advective flow field
u <- function(x) f(x) - Dp(x)
## Parameters
xi <- 2
gamma <- 1
lambda <- 1/2
## Spatial grid
xmax <- 10
xv <- seq(0,xmax,length=301)
dx <- diff(xv)
xc <- xv[-1] - 0.5*dx
## Discretize the generator
G <- fvade(u,D,xv,'r')
## Loading required package: Matrix
##
## Attaching package: 'Matrix'
## The following object is masked from 'package:spam':
##
## det
## Compute the stationary density
pi <- StationaryDistribution(G)
## user system elapsed
## 0.008 0.000 0.008
phi <- pi / dx
plot(xc,phi,type="l")
plot(function(x)dgamma(x,rate=2*lambda/gamma^2,shape=2*lambda*xi/gamma^2),
from=0,to=xmax,add=TRUE,col="red")
## Transients
## Initial condition for the SDE
x0 <- xi/2
## Initial condition for the FKE
phi0 <- numeric(length(xc))
phi0[sum(xc<x0)] <- 1
## Time grid
tv <- seq(0,10,0.03333333)
## Solve the FKE
Gs = as(G, "sparseMatrix")
PHI <- sapply(tv,function(t) as.numeric(phi0 %*% expm(Gs*t)))/dx
gg = rev(sort(PHI))
ind_max = which(PHI == max(PHI), arr.ind = TRUE)
PHI[ind_max] = gg[2]+10*(gg[2]-gg[3])
image.plot(tv,xc,t(PHI))
text(1,9,"text")
(24-1)!*149!
factorial(23)*factorial(14)
factorial(23)*factorial(149)
NI = 149
k = 24
k*NI^2
NI = 50
k*NI^2
NI = 100
k*NI^2
NI = 10
k*NI^2
